{"version":3,"sources":["Components/ToDoItems.jsx","Components/ToDoForm.jsx","Components/ToDo.jsx","index.jsx"],"names":["ToDoItems","pros","Item","onCheck","onRemove","className","checked","onChange","id","name","onClick","Form","TodoForm","props","onSubmit","fieldsValidationMessage","layout","onFinish","values","console","log","title","description","label","minLength","validationMessage","pattern","htmlType","ToDo","useState","time","format","Date","now","todos","setTodos","ids","setIds","index","findIndex","todo","splice","removeAllChecked","newArray","map","renderedItems","countUnchecked","i","length","tasksundone","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.393c3f31.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Checkbox, Button } from 'antd';\r\n\r\nexport const ToDoItems = (pros) => \r\n{\r\n    const {Item, onCheck, onRemove} = pros;\r\n    const check = () => {\r\n        onCheck(Item.id);\r\n    }\r\n    const remove = () => {\r\n        onRemove(Item.id)\r\n    }\r\n    return (\r\n        <li className = {'todo-Items'} key = {Item.id}>\r\n            <Checkbox checked = {Item.checked} onChange = {check}> {Item.name} </Checkbox>\r\n            <Button onClick = {remove}>Remove</Button>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\n\r\n\r\nconst  {Item}  = Form;\r\nexport const TodoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    \r\n    const finish = (values) => {\r\n        console.log('these are the values')\r\n        console.log(values)\r\n        onSubmit(values.name, values.title, values.description)\r\n    }\r\n\r\n    const fieldsValidationMessage = \"Name should be at least 3 characters!\";\r\n    const titlecapValidationmessage = \"Title must begin with CAPS!\";\r\n    \r\n\r\n\r\n    return(\r\n        <Form className={'todo-form'} layout={'inline'} onFinish={finish}>\r\n            \r\n            <div className = {'nameInput'}>\r\n                <Item name = {'name'} label=\"Name\">\r\n                <Input\r\n                minLength = {3}\r\n                validationMessage = {fieldsValidationMessage} \r\n                />\r\n            </Item>\r\n            </div>\r\n            \r\n            <div className = {'titleInput'}>\r\n                <Item name = {'title'} label = \"Title\">\r\n                <Input \r\n                minLength = {3}\r\n                pattern = {\"^[A-Z][A-Za-z]+\"}\r\n                validationMessage = {titlecapValidationmessage}\r\n                />\r\n            </Item>\r\n            </div>\r\n\r\n            <div >\r\n                <Item name = {'description'} label = \"Description\">\r\n                    <Input \r\n                    minLength = {3}\r\n                    validationMessage = {fieldsValidationMessage}\r\n                    />\r\n                </Item>\r\n            </div>\r\n                \r\n            <div className = {'hButton'}>\r\n                \r\n                <Item >\r\n                   <Button htmlType = {'submit'}>Add</Button>\r\n               </Item>\r\n            </div>\r\n            \r\n        </Form>\r\n    )     \r\n}","import React, { useState } from 'react';\r\nimport { Card, Divider, Button} from 'antd';\r\nimport { ToDoItems } from './ToDoItems';\r\nimport {TodoForm} from './ToDoForm';\r\nimport { format } from 'date-fns';\r\n\r\nexport const ToDo = () => {\r\n\r\n    const [todos, setTodos] = useState([\r\n        {id: 1, name: 'Todo 1', title:'eating',description:'pizza',checked:false,time:((format(Date.now(),'dd.MM.yyyy -hh:mm')))},\r\n        {id: 2, name: 'Todo 2', title:'writing code',description:'hello world', checked: false,time:((format(Date.now(),'dd.MM.yyyy -hh:mm')))}\r\n    ]);\r\n\r\n    const aButton = () => {\r\n        return(\r\n            <Button onClick = {removeAllChecked}>\r\n            Remove checked items\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    const [ids, setIds] = useState(10);\r\n\r\n    const onCheck = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n        const todo = todos[index];\r\n        \r\n        todo.checked = !todo.checked;\r\n        setTodos([...todos]);\r\n    }\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n    }\r\n\r\n    const removeAllChecked = () => {\r\n        var newArray = todos.map( (todo) => {return todo.checked === false;})\r\n        console.log(newArray)\r\n        setTodos([...newArray])\r\n    }\r\n    \r\n\r\n    const onSubmit = (name,title,description)=>{\r\n        console.log(name,title,description)\r\n        const todo = {\r\n            id: ids,\r\n            name,\r\n            title,\r\n            time:((format(Date.now(),'dd.MM.yyyy -hh:mm'))),\r\n            description, \r\n            checked: false\r\n        };\r\n\r\n        setTodos([...todos, todo]);\r\n        setIds (ids +1);\r\n    }\r\n\r\n    \r\n    const tasksundone = () =>{\r\n        var countUnchecked = 0;\r\n         for (let i = 0; i < todos.length; i++){\r\n             if (todos[i].checked === false){\r\n                countUnchecked++;      \r\n             }\r\n         }\r\n         console.log(countUnchecked)\r\n         return countUnchecked;\r\n     }\r\n\r\n    const renderedItems = (todos) => {\r\n     \r\n        return (\r\n            <ul className = {'todo-List'}>\r\n                {\r\n                    todos.map(todo => {\r\n                        return (<ToDoItems Item ={todo} onCheck = {onCheck} onRemove ={onRemove} />)\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n    return(\r\n        <Card title = {'My To-Do List'}>\r\n            <TodoForm onSubmit={onSubmit}/>\r\n            <Divider/>\r\n            { \r\n               renderedItems(todos)\r\n            }\r\n            <Divider/>\r\n            {aButton()}\r\n            <Divider/>\r\n            amount of Undone tasks: {tasksundone()}\r\n        </Card>\r\n    );\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Layout, Row, Col } from 'antd';\r\nimport { ToDo } from './Components/ToDo.jsx'\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\n\r\nconst {Header, Footer, Content} = Layout;\r\nconst App = () => {\r\n    return (\r\n        <Layout>\r\n          <Header></Header>\r\n          <Content>\r\n            <Row>\r\n               <Col span={12} offset = {6}>\r\n                    <ToDo/>\r\n                </Col>\r\n            </Row>\r\n          </Content>\r\n          <Footer></Footer>\r\n        </Layout>\r\n    )\r\n}\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}